<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"             
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"  
             xmlns:behaviors="clr-namespace:ConfigurationEditor.Helper"
             xmlns:browse="clr-namespace:ConfigurationEditor.Browse"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"             
             x:Name="userControl"
             x:Class="ConfigurationEditor.Browse.ConfigurationBrowse"
             mc:Ignorable="d"
             prism:ViewModelLocator.AutoWireViewModel="True"
             FontSize="14"
             FontFamily="Times New Roman"
             d:DesignWidth="666"
             d:DesignHeight="500"
             d:DataContext="{d:DesignInstance browse:ConfigurationBrowseViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Design time style resources-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ListView.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TreeView.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/ContentControlEx.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf/Themes/MaterialDesignTheme.listview.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <ContextMenu x:Key="TreeViewItemContextMenu"
                         DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext}">
                <MenuItem Header="CreateSection"
                          InputGestureText="CTRL+E"
                          Command="{Binding Path=CreateSectionCommand}" />
                <MenuItem Header="EditSection "
                          InputGestureText="F2"
                          Command="{Binding Path=RenameSectionCommand}" />
                <Separator />
                <MenuItem Header="MenuItem_DeleteSection"
                          InputGestureText="Delete"
                          Command="{Binding Path=DeleteSectionCommand}" />
            </ContextMenu>
            <Style x:Key="HeadStyles"   TargetType="ContentControl"  >
                <Setter Property="Foreground"  Value="{DynamicResource MaterialDesign.Brush.Primary.Light.Foreground }"/>
                <Setter Property="Background"   Value="{DynamicResource MaterialDesign.Brush.Primary.Light}"/>
                <Setter Property="FontSize"    Value="14"  />
            </Style>
             
             
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="N"
                    Modifiers="Control"
                    Command="{Binding Path=CreateValueCommand}" />
        <KeyBinding Key="E"
                    Modifiers="Control"
                    Command="{Binding Path=CreateSectionCommand}" />
    </UserControl.InputBindings>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="240" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="17*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--Section 树-->
        <TreeView x:Name="SectionTree"
                  Grid.Column="0"
                   BorderThickness="0"
                  materialDesign:RippleAssist.IsDisabled="True"
                  SelectedItemChanged="SectionTree_OnSelectedItemChanged"
                
                  ItemsSource="{Binding Path=Roots}">
            <b:Interaction.Behaviors>
                <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding SelectedSection,Mode=TwoWay}" />
            </b:Interaction.Behaviors>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Create Root Section" Command="{Binding CreateRootSectionCommand}" />
                </ContextMenu>
            </TreeView.ContextMenu>
            <TreeView.InputBindings>
                <KeyBinding Key="F2"
                            Command="{Binding Path=RenameSectionCommand}" />
                <KeyBinding Key="Return"
                            Command="{Binding Path=RenameSectionCommand}" />
                <KeyBinding Key="Delete"
                            Command="{Binding Path=DeleteSectionCommand}" />
            </TreeView.InputBindings>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                    <StackPanel Orientation="Horizontal"
                                Margin="2">
                        <materialDesign:PackIcon Kind="Folder"
                                                 Width="16"
                                                 Height="16"
                                                 Margin="3 0" />
                        <TextBlock Margin="3 0"  Text="{Binding Path=Key}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <!--<TreeView.ItemContainerStyle >

                <Style TargetType="TreeViewItem"
                       BasedOn="{StaticResource    MahApps.Styles.TreeViewItem}">
                    <Setter Property="IsExpanded"
                            Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected"
                            Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    <Setter Property="ContextMenu"
                            Value="{StaticResource TreeViewItemContextMenu}" />
                </Style>
            </TreeView.ItemContainerStyle>-->
        </TreeView>

        <!--分隔-->
        <GridSplitter Grid.Column="1"
                      Focusable="False"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      Background="LightGray"
                      Width="5" />
        <!--This is the hidden helper Grid which does the resizing -->
        <Grid Visibility="Hidden"  Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ElementName=keyColumn, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=typeColumn, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=valueColumn, Path=ActualWidth}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="3"  x:Name="helperField">
                <TextBlock Text="{Binding ElementName=helperField,Path=ActualWidth}"></TextBlock>
            </Grid>
        </Grid>
        <ScrollViewer Grid.Column="2"
               Margin="10 5 5 5"
               HorizontalScrollBarVisibility="Disabled"
               VerticalScrollBarVisibility="Auto"                      >
            <!--<ContentControl DataContext="{Binding ElementName=ValueListView}"/>-->
            <!--Template="{StaticResource ConfigDataTemplate}" />-->
        </ScrollViewer>
        <!--列表框-->
        <ListView Name="ValueListView"
                  FocusManager.IsFocusScope="True"
                  Grid.Column="2"                
                  FontSize="14"
                  SelectedItem="{Binding Path=SelectedValue}"
                  SelectionMode="Single"
               
                  ItemsSource="{Binding Path=SelectedSection.Values}" Margin="1">
             <ListView.InputBindings>
                <KeyBinding Key="F2"
                            Command="{Binding Path=EditValueCommand}" />
                <KeyBinding Key="Return"
                            Command="{Binding Path=EditValueCommand}" />
                <KeyBinding Key="Delete"
                            Command="{Binding Path=DeleteValueCommand}" />
            </ListView.InputBindings>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{x:Static browse:I18n.MenuItem_CreateValue}"
                              InputGestureText="CTRL+N"
                              Command="{Binding Path=CreateValueCommand}" />
                </ContextMenu>
            </ListView.ContextMenu>
            <!--列表框-->


            <ListView.View>
                <GridView>
                    <GridViewColumn Width="150" x:Name="keyColumn" 
                        Header="{x:Static browse:I18n.ListViewTitle_Key}"   HeaderContainerStyle="{StaticResource HeadStyles}">
                        <GridViewColumn.CellTemplate  >
                            <DataTemplate DataType="local:ConfigValueItem">
                                <Grid Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon Kind="TextBoxOutline"
                                                             Grid.Column="0"
                                                             Width="16"
                                                             Height="16"
                                                             Margin="3" />
                                    <TextBlock Grid.Column="1" Text="{Binding Path=Key}"  />
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                     </GridViewColumn>

                    <GridViewColumn Width="100"  x:Name="typeColumn" 
                                    Header="{x:Static browse:I18n.ListViewTitle_Type}" HeaderContainerStyle="{StaticResource HeadStyles}"
                                    DisplayMemberBinding="{Binding Path=Type}" >
                    </GridViewColumn>

                    <GridViewColumn Header="{x:Static browse:I18n.ListViewTitle_Value}" 
                                    HeaderContainerStyle="{StaticResource HeadStyles}"
                                    x:Name="valueColumn"
                                    DisplayMemberBinding="{Binding Path=ValueText}"
                                    
                                    >
                    </GridViewColumn> 
                    <GridViewColumn Width="{Binding ElementName=helperField, Path=ActualWidth,Mode=OneWay}" 
                                    x:Name="descriptionColumn" 
                                    DisplayMemberBinding="{Binding Path=Description}" 
                                    Header  ="{x:Static browse:I18n.ListViewTitle_Description}"
                                    HeaderContainerStyle="{StaticResource HeadStyles}">
                        
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.Resources>
                <!--注意，必须放在 资源中，放在 Style 中将无法绑定命令-->
                <ContextMenu x:Key="ListViewItemContextMenu"
                             DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ViewModel}">
                    <MenuItem Header="{x:Static browse:I18n.MenuItem_CreateValue}"
                              InputGestureText="CTRL+N"
                              Command="{Binding Path=CreateValueCommand}" />
                    <MenuItem Header="{x:Static browse:I18n.MenuItem_EditValue}"
                              InputGestureText="F2"
                              Command="{Binding Path=EditValueCommand}" />
                    <Separator />
                    <MenuItem Header="{x:Static browse:I18n.MenuItem_DeleteValue}"
                              InputGestureText="Delete"
                              Command="{Binding Path=DeleteValueCommand}" />
                </ContextMenu>
            </ListView.Resources>
            <!--<ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListViewItem}" >
                    <Setter Property="IsSelected"
                            Value="{Binding Path=Selected}" />
                    <Setter Property="ContextMenu"
                            Value="{StaticResource ListViewItemContextMenu}" />
                    <EventSetter Event="MouseDoubleClick"
                                 Handler="ListViewItem_MouseDoubleClickExecuteEditCommand" />
                    <EventSetter Event="Selected"
                                 Handler="ListViewItem_FocusWhenSelected" />
                </Style>
            </ListView.ItemContainerStyle>-->
        </ListView>

    </Grid>
</UserControl>
